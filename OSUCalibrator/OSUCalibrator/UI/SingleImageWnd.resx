<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AAASCwAAEgsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQUBAQEIAQEBCAEBAQgBAQEIAQEBCAEBAQgBAQEIAQEBCAEB
        AQgBAQEIAQEBCAEBAQgBAQEIAQEBCAEBAQYFBQUqNVgXzTJEIfsyRCH/MkQh/zJEIf8yRCH/MkQh/zJE
        If8yRCH/MkQh/zJEIf8yRCH/MkQh+zVYF80GBgYwQ3EavGSAS/+AnWf/R1wy/2eKSP9nikj/Z4pI/2eK
        SP9ggUP/XX1B/1l0Qf9dfUH/YYFF/2mHTv9YcUL/QnAavUppL/mWuHn/e6RY/1VsQP9djjP/NXIA/zVx
        AP8xaAD/PFIm/0ZERP9QTk//RkRE/1hlSf+Lp3L/qL6V/0ppL/lUdDb/mL93/3GcS/9WbT//ZJg3/z5+
        Bf86dgX/QFkp/15dXf+bmpr/oKCg/5uamv9fXV7/YW9U/565h/9UdDb/XYA8/57Cfv95olX/X3RK/3iq
        TP9WlSD/Tocd/0xKS/+WlZb/YWBg/0RCQ/9hYGD/lpWW/0xKS/92oFL/XYA8/2aMQ/+hxIP/aIdN/2l9
        Vf+Mu2P/b6k8/2WZN/9jYWL/ZWNk/4yLi/+Mi4v/R0VG/2VjZP9ta2z/eZ5a/2aMQ/9qkEf/pseJ/4qu
        a/9yhmD/nsd7/4a4Wv95plH/hoWF/0RDQ/+Mi4v/jo2N/0hGR/9EQ0P/hoWF/4uxav9qkEf/bZNJ/52z
        iP+jtJX/fI5q/6/Qkv98nV//dJNZ/6Cwkv9qaGj/RkRE/0VDQ/9GRET/amlp/5SgiP99mWT/bZNJ/2+V
        S/etyJb/o7+K/4maef/A2qn/sdGU/6/Qk/+hv4f/sb2m/52cnP+LiYn/nZyc/6evnv+JnXf/jKR3/2+V
        S/dhlTGyiqlu/67Em/+HmHf/xNyu/8/jvf/J37X/x92z/8PVs/+6zar/ssef/7rNqv/E1bb/xtmz/4+w
        cf9hlTGnBQUFCGKXMrJ0mlD3f6Je/3GUU/+Jq2n/dJpQ/3SaUP+NrW7/2OfL/+fw4P/X58r/ja1u/3Sa
        UPdilzKyBQUFCAAAAAAAAAAABQUFCG2aQ+N3nVP/bZpD4wUFBQgFBQUIbZpD43edU/93nVP/d51T/22a
        Q+MFBQUIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADAAwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAAASCwAAEgsAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQBAQEHAQEBCAEBAQgBAQEIAQEBCAEB
        AQgBAQEIAQEBCAEBAQgBAQEIAQEBCAEBAQgBAQEIAQEBCAEBAQgBAQEIAQEBCAEBAQgBAQEIAQEBCAEB
        AQgBAQEIAQEBCAEBAQgBAQEIAQEBCAEBAQgBAQEGAAAABAAAAAEAAAAAAgICEDtzCVE5WBzROE0k7ThK
        Ju84SibvOEom7zhKJu84SibvOEom7zhKJu84SibvOEom7zhKJu84SibvOEom7zhKJu84SibvOEom7zhK
        Ju84SibvOEom7zhKJu84SibvOEom7zhKJu84TSTtOVwazD17CEMBAQEIAAAAAAAAAABDhwcsQV0n+Vdx
        Qf9khEn/ZIVH/2SFR/9khUf/ZIVH/2SFR/9khUf/ZIVH/2SFR/9khUf/ZIVH/2ODRv9ffUT/XHpC/1p3
        QP9ad0D/WndA/1x6Qv9ffUT/Y4NG/2SFR/9khUf/ZIVH/2SESf9ZckH/Ql4n7UOLBSMAAAAAAAAAAFSF
        JsFPYjz/Vno0/1d7Nf9MaTL/OlAm/zZXGf8xWg3/MVoN/zFaDf8xWg3/MVoN/zFaDf8xWg3/OWQT/0VW
        NP9HSkL/REJD/1pZWf9EQkP/R0pC/0VWNP85ZBP/O2wQ/z1wEP89cBD/Q3UY/2CKO/9cd0L/Q3AZswAA
        AAAAAAAAX4U7716GOv9MkRH/QYsA/zVzAP8uUBD/PFgk/zJqAP8yagD/MmoA/zJqAP8yagD/LmQA/zVX
        Ff9ERUD/eXd3/6Cfnv+trKz/rays/62srP+gn57/eXd3/0RFQP81VxX/LmQA/zJqAP8yagD/RXkY/2mO
        Sv9EZCnlAAAAAAAAAABghj3/W4ky/0KLA/9BiwD/NXMA/ydUAP8+WCj/M28A/zNvAP8zbwD/M28A/zFp
        AP82Whb/TUtM/5STkv+UkpL/Y2Ji/0NBQv9FQ0T/Q0FC/2NiYv+UkpL/lJOS/01LTP9ZckH/a5NJ/22X
        SP9AeBD/apBI/0hlLucAAAAAAAAAAGGHPv9biTL/QIoA/0GLAP81cwD/J1QA/0BZKf81cgD/NXIA/zVy
        AP81cQD/MWUE/0hJQ/+Pjo3/hIOC/0RDQv81OTH/KjEj/yYuH/8kLB3/LTIo/0JBQP+Eg4L/j46N/0tM
        SP9kiUX/cZpM/0J7EP9rk0j/TGkv5gAAAAAAAAAAY4k//1uJMv9AigD/QYsA/zVzAP8nVAD/Qlsq/zd2
        AP83dgD/N3YA/zRwAP9AVyn/cXBw/5STkv9HRkX/ODsy/y80Kf8qLyP/Jy0g/yUrHf81PS7/NDss/0RD
        Qv+Uk5L/cXBw/1doR/9plET/Q38Q/22WSf9PbjPlAAAAAAAAAABkikD/W4ky/0CKAP9BiwD/NXMA/ydU
        AP9DXCz/QH8K/0B/Cv9Afwr/O3QJ/0lPQv+OjIz/bWtr/0VGQP83OzL/Mzcu/zI1LP8uMyn/LDEl/z1E
        Nv83PzD/MTYr/21ra/+OjIz/SU9C/zt0Cf9Khhf/cZpM/1JzNeQAAAAAAAAAAGWLQv9biTL/QIoA/0GL
        AP81cwD/J1QA/0ReLf9MiRf/TIkX/0yJF/9FexX/TkxM/5+enf9NS0z/RUdB/zw+OP86PTb/ODs0/zY5
        Mf8zNy3/LjMp/ysxJP8pMCL/TUtM/5+enf9OTEz/RXsV/1SOIv91oFD/VnY45AAAAAAAAAAAZ41D/1uJ
        Mv9AigD/QYsA/zVzAP8nVAD/Rl8v/1iTJf9YkyX/WJMl/0+EIf9PTU7/pKKi/09OTf9HR0T/YmJf/3p8
        d/91d3H/VllS/zk8NP82OjD/MDYr/y0zJv9PTU7/pKKi/1hWVv9PhCH/XpYs/3qlVf9afDrjAAAAAAAA
        AABojkT/W4ky/0CKAP9BiwD/NXMA/ydUAP9HYDD/ZZ0z/2WdM/9lnTP/W44u/1FPT/+mpKT/UlBQ/0pJ
        R/+MjIv/h4iF/4GCfv96fHf/QEE7/zw+N/83OzH/LzQp/1JQUP+mpKT/UU9P/1uOLv9onzf/fqlY/16A
        PuIAAAAAAAAAAGmPRf9biTL/QIoA/0GLAP8lUAD/J1QA/0liMv9vpkD/b6ZA/2+mQP9mmDv/VFhO/52c
        m/9oZmb/TkxN/5WVlP+Uk5L/jY2L/4SFgv9GR0P/QUI9/zs+N/89QDn/aGZm/52cm/9UWE7/Zpg6/3Cm
        Qf+Drl3/YoVB4QAAAAAAAAAAapBH/1uJMv9AigD/QYsA/yVQAP8nVAD/RVsv/3ywT/98sE//fLBP/3Wm
        Sv9gc03/fHp6/4+Njf9UUlP/cXBw/5eWlv+WlZX/cG9u/0tLSP9DRUD/PT45/1JQT/+PjY3/fHp6/2Bz
        Tf91pkr/ea1L/4exYP9mikPgAAAAAAAAAABskkj/ZIhD/0uME/9NjRP/P3QQ/zVXF/9LYjf/n8Z9/4ut
        bf9+nmP/iatr/3ykWv9XWFT/kI6O/399ff9XVVX/UlBQ/09NTf9OTEv/SEhG/0pKSP9VU1L/f319/5CO
        jv9WVlL/VXI8/11/P/9egj7/irZk/2qPRt8AAAAAAAAAAGqQR/dac0P/Z4lI/2iJSP9WcTv/QFUs/1Bp
        Ov91mlb/XXpE/6+9ov9dekT/dJlV/3aRXf9bWVn/i4mJ/42Liv9ubGz/Xlxc/1pYWP9eXFz/bmxs/42L
        iv+LiYn/W1lZ/1puSf9hgEf/ZIVI/16BQP+MuGb/bZNJ3wAAAAAAAAAAZJA72n6kXP+LtGj/fqFf/3CO
        Vv9tilT/bYpU/5zFeP+IrWn/fZ5g/4itaf+cxXj/krhw/3yVZv9bXFj/dXNz/4mHh/+Pjo3/j46N/4+O
        jf+Jh4f/dXNz/1tcWP98lWb/aYVR/22KVP9mhkv/ZohJ/4iwZf9jkzjNAAAAAAAAAABakyaHgKRf/5jD
        cv9QZz3/UGI//z9NM/90jl7/p8yH/6fMh/+nzIf/p8yH/6fMh/+nzIf/n8KA/5Oxd/91gWf/YWRd/1pY
        WP9kYmL/WlhY/2FkXf91gWf/k7F3/5/CgP+my4X/och//5K/av+Tvmv/fqJc/1eTIYIAAAAAAAAAAAUF
        BQhumEbkkLNv/1JoP/9PYz7/Tl4//3iQY/+tz4//rtCQ/67QkP+u0JD/rtCR/6/Qkv+x0pX/stCX/6zJ
        k/+nw47/or6K/6K+iv+ivor/p8OO/6zJk/+x0Jb/r9CS/6bLhv+gyH7/lsFw/4iuZv9olT7ZAAAAAAAA
        AAAAAAAAAAAAAE2TDyZvmUfkja9s/5rAd/+XuHv/dYxg/6nKjP+qyYz/qsmM/6rJjP+qyo3/q8qO/7HP
        l//B26r/y+G4/8ziuv/M4rr/zOK6/8ziuv/M4rr/yeC2/73Zpf+uzZP/oMWB/5W7c/+DqGP/aZY/402T
        DyYAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBQhblSiHapdA2XOZT/9zmU//bI9K/2eJR/9niUf/bI9K/3OZ
        T/9zmU//c5dQ/3SXVv+RqXv/nLCK/52xjP+esY3/nbGM/5quiP+Mp3X/bpNN/3OXUf9zmU//bZhF21uV
        KIcFBQUIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE2TDyZumUbbdZtR/3Wb
        Uf9umUbbTZMPJgAAAABomDzDgqpb/53Gev+21Zz/v9qo/8Hbq/+/2qj/s9OX/5fCcf96plT/aJg8wwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFaWH2N1nlH/cqdC/7jUnv/a6M7/2ujO/9rozv+205v/baQ8/3Sc
        T/9Wlh9jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGGYL4x3nVPvd51T/3edU/93nVP/d51T/3ed
        U/93nVPvYZgvjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////4AAAACAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAPAAAAD4AAAB/4E
        AH///AB///4A////////////////////////////
</value>
  </data>
</root>