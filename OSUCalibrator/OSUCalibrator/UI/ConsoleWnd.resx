<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AAASCwAAEgsAAAAAAAAAAAAAAAAAAAAAAAIBAQEGAQEBCgICAhICAgIYBAQEJQUFBS8GBgY4l20Lg2FM
        H/VfSyL2BgYGOQQEBCYCAgIQAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmnARrmRS
        KP+Fckn/Xksh/wEBAQcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADSkwIYgmMb4Xdi
        Mv+agUj/podA/2ZSIv/ZlwAPAAAAAAAAAAAAAAAAAAAAAKt+FqeHaSTxeWAq/3dgKf92Xin/dl4o/4py
        Pf+qi0X/qIMw/66MQP9vWSb/blgm/3tfIfKkdxOqAAAAAK+BGKaSeED/spJJ/7mWRP+7lT//u5VA/7qV
        QP+1jzf/qX0Y/51uAP+wijT/s5A//6+OQ/+miUj/g207/6F2F7iYeC3vu5lN/72OI/+xfAL/r3oB/655
        AP+seAD/q3cA/6l2AP+odQD/pnMA/6RyAP+jcQD/rYIg/6yOSf+EaCr5mXw4/86pU//DkBr/wY0X/7+L
        FP+9iRL/u4cP/7mEDP+2gQn/tH8H/7F8BP+wewP/rnoC/6x4Af+4l0n/h20y/6ODPf/btFr/0aEy/9Cf
        MP/OnS3/zJop/8qZJ//IliT/xpQh/8SRHv/Cjxv/v4wY/72KFf+6hxL/yKJM/5B1Nv+ujUL/5L5m/96x
        S//dsEj////////////////////////////////////////////MnC7/ypor/9SuWP+afTv/tJJG/+rG
        c//owGT/5r5g/8ShUP/Dn07/wZ1L/8CcSf+/mkb/vplE/7yXQf+6lD7/2axG/9irQ//eumf/pYVA/7aU
        SP/sy3//68p8/+vIef///////////////////////////////////////////+S8Xv/julv/58V3/7CP
        Rf+4lkr/7tCL/+/TlP/v05L/y7J6/8qxd//KsHX/yq9y/8mucP/IrGz/yaxr/8iraP/ryHf/6sZ0/+zN
        hf+4lkr/uphM/+zSl//z3q7/8tyq//Lbp//x2qT/8dmh//HXnv/w1pv/8NWY/+/Ulf/v05L/7tKQ/+7R
        jv/q0Zj/uphM/8CaRe3ix4n/9uXA//bnxf/25cD/9eS9//Xjuv/04rf/9OC0//Pfsf/z3q7/8t2r//Pe
        rf/y3av/48iM/76aSffMmiifxqdg/+HGiP/s2Kr/8tql//Lapf/y2qX/8dqk//HapP/x2aP/8dmi//HY
        oP/s16b/48iL/8epY//Kmi2vAAAAAM2aKZ/EnkjtwJ5S/8CeUv/AnlL/wJ5S/8CeUv/AnlL/wJ5S/8Ce
        Uv/AnlL/wJ5S/8SeSO3NmimfAAAAAIAAAAD/BwAA/AcAAIABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIABAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAAASCwAAEgsAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAIBAQEIAQEBCgEBAQoCAgISAgICFwIC
        AhgDAwMgBAQELAUFBS8FBQUzBgYGOwYGBjsGBgY7nW8Hb2FMHfpeSyL2BgYGPAYGBjcEBAQpAwMDGQIC
        Ag8BAQEIAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAQEHAQEBCMGHA0lnUBz5fGg//15KIf8BAQENAQEBBQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIjAIycVYb+YJuQP+ihUH/Y08h/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0pMCGHdbHOuGcUH/pYU9/6iI
        QP9oUyL/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANKTAhiEZR7pi3RC/6qJ
        Pv+XbQz/rItA/21XJP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADTlAMYiWkg6JB5
        RP+ujD3/nXEM/5dpAP+wjkD/clsn/9mXAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALmGEXeScCTngWYs/4BmLP+AZSv/fmUs/35lK/99Yyv/fWMr/3xj
        Kv+UfEb/s489/6N1DP+dbgD/nW0A/7SQP/93Xyn/dl4p/3ZeKP91XSj/dV0o/3RcKP90XCf/clwo/4Zm
        H+mygQ+HAAAAAAAAAAAAAAAAAAAAAAAAAACnfR7Dkng9/6+RSv+9mET/v5g//8CZQP+/mED/v5hA/72X
        P/+9l0D/vJZA/7iRN/+peQz/o3IA/6NxAP+icQD/s4wz/7eSP/+3k0D/tpI//7WRP/+0kT//tZFA/7SQ
        P/+wj0T/ooZI/4NsN/+bdBnGAAAAAAAAAAAAAAAAvYkTdZh9P//BnEf/vY0h/7N+Bf+xfAH/sHsB/696
        AP+ueQD/rnkA/614AP+seAD/q3cA/6p2AP+pdgD/qHUA/6h1AP+ndAD/pnMA/6VzAP+kcgD/o3IA/6Nx
        AP+icQD/oXAA/6FyBP+rgB//sZFG/4dvOv+qfRWoAAAAAAAAAACgfCvluZhN/8OTJf+7hAj/uoQJ/7mE
        Cf+3ggj/t4II/7aBB/+0fwX/s34E/7J9BP+xfAP/sHsC/696Af+ueQD/rXgA/6x4AP+rdwD/qnYA/6l2
        AP+odQD/qHUA/6d0AP+mcwD/pXMA/6RyAP+vgyD/qYxK/4tsKPEAAAAAAAAAAJh7N//MpEj/wowQ/8KN
        Ev/DjhX/wY0V/8GNFf/AjBT/vooS/72JEf+8iBD/u4cP/7qFDf+5hAz/t4IK/7aBCf+1gAj/tH8H/7N+
        Bf+xfAT/sHsD/696Av+ueQH/rXkB/6t3AP+rdwD/qnYA/6t4BP+4lkn/hGow/wAAAAAAAAAAnn86/9Wp
        Rv/JkxX/ypUd/8qXIv/KlyL/yZYh/8eUH//Gkx7/xZId/8OQG//DkBr/wo8Z/8CNF/+/jBb/vooU/72J
        E/+8iBL/uoYQ/7qGD/+5hQ7/t4MM/7aCC/+1gQr/s38I/7J+Bv+xfQX/r3oC/8GaQv+LbzL/AAAAAAAA
        AACjhDz/2q5J/9CaHv/Rnin/0Z8t/9GgLv/Pniz/z50r/86cKv/Nmyj/zJon/8uZJv/KlyT/yZYj/8eU
        If/HlCD/xpMf/8SRHf/EkRz/wo8a/8GOGf/AjRj/vosW/72KFf+8iRT/u4gS/7mFD/+3ggr/x55C/490
        Nf8AAAAAAAAAAKqJP//dsUv/1qEn/9inNf/YqDn/2Kg5/9amN//WpTb/1aQ1/9SjM//TojL/0qEx/9Gg
        L//Qny7/z50s/86cK//Nmyr/y5oo/8qZJ//JmCb/yJYk/8eVI//GlCL/xZMg/8SSH//DkB3/wo8a/7+K
        Ev/Mo0X/lHg3/wAAAAAAAAAAr45C/+K1Tv/dqC//3q4//9+wRf/er0T/////////////////////////
        ////////////////////////////////////////////////////////////////////////zJsq/8uZ
        KP/JlyT/xpIa/9CmR/+afTr/AAAAAAAAAACykET/5bhQ/+GtN//jtEn/5LdQ/+O2T///////////////
        ////////////////////////////////////////////////////////////////////////////////
        ///TpDb/0qI0/9CfLv/MmCL/1qtK/6GBPP8AAAAAAAAAALORRf/luVP/4rE//+a6Vf/nvVz/57xb/8Sg
        Tf/En0z/xJ9K/8SeSf/DnUj/wp1H/8KcRv/Bm0T/wZtD/8CaQv+/mUH/v5hA/76XP/+9lj3/vJU8/7uU
        O/+6kzr/upM5/9mrQf/Zq0D/1qY4/9KfKv/Zrkz/poZA/wAAAAAAAAAAtJJH/+a6Vf/jtEb/575f/+jB
        aP/owWb/6MBl/+jAZP/ov2L/579h/+e+YP/nvV7/571d/+e9XP/mvFr/5rtZ/+a7WP/luVb/5blV/+S4
        U//jtlH/47ZR/+G1T//gs03/4LNN/9+yS//dr0T/2aYy/96yT/+ri0P/AAAAAAAAAAC1k0j/5rpX/+W3
        Tv/pwmn/6sZz/+rFcv/qxXH/6sRv/+nEbv/pw23/6cNr/+nCav/owWj/6MFn/+jBZv/owGT/6L9j/+e/
        Yf/nvmD/575f/+e9Xf/nvVz/57xb/+W7Wf/lulj/5LlW/+O2Tv/erDn/4rZR/7GQRf8AAAAAAAAAALeV
        Sf/mvFr/5rpV/+rGc//syn7/7Mp9////////////////////////////////////////////////////
        /////////////////////////////////////////////+i/Y//nv2H/5rtY/+OyQf/muVT/tpRI/wAA
        AAAAAAAAuJZK/+e9XP/nvVz/7Mp9/+3Pif/tz4n/////////////////////////////////////////
        ////////////////////////////////////////////////////////6sRv/+nDbf/ov2L/5LVJ/+a6
        Vv+4lkr/AAAAAAAAAAC5l0v/571e/+i/Yv/tzob/79OU/+/TlP/Ls33/yrJ7/8qyev/Lsnr/y7F4/8ux
        eP/JsHX/yrB1/8mvc//Kr3P/yq9x/8mucP/IrW7/ya1u/8isbP/JrWz/yKtq/8iraf/ryXr/68h4/+nD
        a//lt0//5rtY/7mXS/8AAAAAAAAAALqYTP/nvV7/6MFn/+7Rjf/x2J//8dig//HXnv/w153/8Nab//DW
        mv/w1Zn/8NWX/+/Ulv/v1JX/79OT/+/Tkv/v0pH/7tGP/+7Rjv/u0Iz/7tCL/+7Piv/tzoj/7c6H/+3N
        hf/szIL/6sZz/+a5VP/mu1n/uphM/wAAAAAAAAAAu5lN/+e9Xv/owWb/7tGP//Lbpv/y3av/8tyq//Lc
        qP/y26f/8tql//HapP/x2aP/8dmh//HYoP/x2J//8Ned//DXnP/w1pr/8NWZ//DVmP/v1Jb/79SV/+/T
        lP/v05L/79KR/+7Piv/ryHf/5rpX/+a7Wf+7mU3/AAAAAAAAAAC8mk7/47tf/+e/Yf/tzob/8dmj//Pf
        sP/04LL/9OCy//Pfsf/z37D/896v//Perf/z3az/8tyq//Lcqf/y3Kj/8tum//Lapf/x2qT/8dmi//HZ
        of/x2KD/8dee//DWm//v1JX/7c+J/+rFcv/mulb/4Lpk/7yaTv8AAAAAAAAAAMKaQOPXtGH/571e/+nD
        bf/u0Y7/8dig//Lbp//y3Kr/8tyq//Lcqf/y3Kj/8tyo//Lbp//y26b/8dqk//HZo//x2aL/8dig//HY
        n//x157/8Nec//DWmv/w1Zf/79KR/+3OiP/ryHj/575f/+a8Wv/YtWP/wZtF7QAAAAAAAAAAz5kecMSj
        WP/iul7/6L9j/+nDbf/rx3b/7Mt//+zMgv/tzIP/7c2E/+3Mg//szIL/7MyC/+zMgf/sy4D/7Mt//+zK
        fv/syn3/68p8/+vJe//ryXr/68h4/+rHdf/qxG//6MFm/+i/Yv/nvV7/4rph/8WjWf/MmiifAAAAAAAA
        AAAAAAAAyZszvcOkXf/XsV7/4r1p/+i/Yv/owGX/6MFn/+jBaP/owWj/6MFo/+jBaP/owWj/6MFo/+jB
        aP/owWj/6MFo/+jBZ//owWf/6MFn/+jBZ//owWb/6MBl/+i/Yv/nvl//4rxn/9ezX//FpFr/yZszvQAA
        AAAAAAAAAAAAAAAAAAAAAAAA0JofcMWdQ+PBn1P/wZ9T/8GfU//Bn1P/wZ9T/8GfU//Bn1P/wZ9T/8Gf
        U//Bn1P/wZ9T/8GfU//Bn1P/wZ9T/8GfU//Bn1P/wZ9T/8GfU//Bn1P/wZ9T/8GfU//Bn1P/xZ1D49Ca
        H30AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////gAAAH//4A////g////wP///4D///8Af/4AAAB8AA
        AAOAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABwAAAA+AAAAf/////
</value>
  </data>
</root>